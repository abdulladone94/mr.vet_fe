import api from '@/api';
import CaseReport from '@/components/Card/CasesReport';
import MenuLayout from '@/components/Layout/MenuLayout';
import MultiSearchFilter from '@/components/MultiSearchFilter';
import SearchFilters from '@/components/SearchFilters';
import { useDoctors } from '@/context/doctorContext';
import styles from '@/styles/Home.module.css';
import Head from 'next/head';
import { ExclamationCircleFilled } from '@ant-design/icons';
import React, { useEffect, useState } from 'react';
import { Modal } from 'antd';
import Text from '@/components/UI/Text/Typography ';
import Link from 'next/link';
import { CREATE_DOCTOR_ROUTE } from '@/components/constants/routes';
import FilledButton from '@/components/UI/Buttons/FilledButton';
import { usePathname } from 'next/navigation';

const Cases = () => {
  const [reports, setReports] = useState([]);
  const [searchValues, setSearchValues] = useState({});
  const [searchReportsRes, setSearchReportsRes] = useState([]);
  // const { searchValue, setSearchValue } = useDoctors();

  const isSearchValue =
    !!searchValues.fromDate ||
    !!searchValues.name ||
    !!searchValues.healthStatus;
  const { confirm } = Modal;

  const getAllReports = async () => {
    try {
      const response = await api.report.reportByDoctorId({
        // id: doctorId,
        pageNo: '1',
        noOfItem: '10',
      });
      setReports(response.data.results || []);
    } catch (error) {
      console.log(error);
    }
  };

  const searchRepors = async () => {
    try {
      const response = await api.report.searchReports({
        ...searchValues,
        pageNo: 1,
        noOfItem: 10,
      });
      setSearchReportsRes(response.data.results || []);
    } catch (error) {
      console.log(error);
    }
  };
  console.log(searchReportsRes);

  useEffect(() => {
    getAllReports();
  }, []);

  useEffect(() => {
    searchRepors();
  }, [searchValues]);

  const showConfirm = (id) => {
    confirm({
      title: 'Are you want to delete this report?',
      icon: <ExclamationCircleFilled />,
      okText: 'Yes',
      cancelText: 'No',
      okButtonProps: {
        style: {
          backgroundColor: '#f7a360',
          color: 'white',
        },
      },
      onOk() {
        handleDelete(id);
      },
    });
  };

  const handleDelete = async (id) => {
    try {
      await api.report.deleteReport({ id: `${id}` });
      getAllReports();
    } catch (error) {
      console.log(error);
    }
  };

  const caseReportComponent = (data) => {
    const formatCreatedDate = data.created_at.split('T')[0];
    return (
      <CaseReport
        profileImage={data.inspection.pet.pet_image_url}
        createdDate={formatCreatedDate}
        name={data.inspection.pet.pet_name}
        dob={data.inspection.pet.dob}
        breed={data.inspection.pet.breed.breed_name}
        species={data.inspection.pet.species.species_name}
        gender={data.inspection.pet.gender}
        image={data.inspection.image_url}
        disease={data.inspection.disease.disease}
        heatMap={data.inspection.heat_map_url}
        healthStatus={data.inspection.health_status.health_status}
        score={data.inspection.domain_confident_score}
        username={data.inspection.user.username}
        email={data.inspection.user.email || '-'}
        button={() => showConfirm(data.id)}
      />
    );
  };

  return (
    <>
      <Head>
        <title>Cases</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="flex items-center justify-between w-full h-10 mx-1 my-5 md:mx-20">
          <Text title="Manage Reports" />
          <Link href={CREATE_DOCTOR_ROUTE}>
            <FilledButton variant="primary" label="Add Doctor" />
          </Link>
        </div>
        <MultiSearchFilter setSearchValues={setSearchValues} />

        <MenuLayout>
          <div className="grid w-full grid-cols-3 gap-8">
            {isSearchValue
              ? searchReportsRes?.map(caseReportComponent)
              : reports?.map(caseReportComponent)}
          </div>
        </MenuLayout>

        {/* <DoctorTable data={data} columns={columns} /> */}
      </main>
    </>
  );
};

export default Cases;
